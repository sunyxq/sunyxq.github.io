(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{405:function(t,e,n){"use strict";n.r(e);var a=n(25),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"webpack4基础配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack4基础配置"}},[t._v("#")]),t._v(" Webpack4基础配置")]),t._v(" "),n("h2",{attrs:{id:"webpack基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack基本概念"}},[t._v("#")]),t._v(" webpack基本概念")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("什么是webpack")]),t._v(" "),n("p",[n("strong",[t._v("webpack")]),t._v(" 是一个现代 JavaScript 应用程序的"),n("em",[t._v("静态模块打包工具")]),t._v("："),n("em",[t._v("webpack")]),t._v("分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并生成一个或多个 "),n("em",[t._v("bundle")]),t._v("，将其打包为合适的格式以供浏览器使用。")]),t._v(" "),n("p",[n("strong",[t._v("webpack构建")]),t._v("：")]),t._v(" "),n("p",[n("code",[t._v("构建就是把源代码转换成发布到线上的可执行JavaScript，HTML，CSS代码，包括如下内容：")])]),t._v(" "),n("ul",[n("li",[t._v("代码转换：TypeScript编译成JavaScript，SCSS或LESS编译成CSS等")]),t._v(" "),n("li",[t._v("文件优化：压缩HTML、CSS、JavaScript代码，压缩合并图片等")]),t._v(" "),n("li",[t._v("代码分割：提取多个公共代码、提取首屏不需要执行的代码让其异步加载")]),t._v(" "),n("li",[t._v("模块合并：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件")]),t._v(" "),n("li",[t._v("自动刷新：监听本地源代码的变化，自动重新构建、刷新浏览器、nodemon")]),t._v(" "),n("li",[t._v("代码校验：在提交代码前校验代码是否符合规范及单元测试是否通过")]),t._v(" "),n("li",[t._v("自动发布：更新完代码后，自动构建出线上发布代码并传输给发布系统")])]),t._v(" "),n("p",[t._v("构建其实是工程化、自动化思想在前端开发中的体现。把一系列流程用代码去实现，让代码自动化地执行这一系列复杂的流程。构建给前端开发注入了更大的活力，解放了生产力，更加方便了前端开发。")])]),t._v(" "),n("li",[n("p",[t._v("什么是webpack模块")]),t._v(" "),n("ul",[n("li",[t._v("ES6 "),n("code",[t._v("import")]),t._v("语句")]),t._v(" "),n("li",[t._v("CommonJS "),n("code",[t._v("require()")]),t._v("语句")]),t._v(" "),n("li",[t._v("AMD "),n("code",[t._v("define")]),t._v("和"),n("code",[t._v("require")]),t._v("语句")]),t._v(" "),n("li",[t._v("CSS/SASS/LESS文件的"),n("code",[t._v("@import")]),t._v("语句")]),t._v(" "),n("li",[t._v("样式（"),n("code",[t._v("url(…)")]),t._v("）或HTML文件("),n("code",[t._v("<img src=… />")]),t._v(")中的图片链接")])])]),t._v(" "),n("li",[n("p",[t._v("搭建webpack环境")]),t._v(" "),n("p",[t._v("node环境")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("node -v \t// node版本\nnpm -v \t\t// npm版本\n")])])])]),t._v(" "),n("li",[n("p",[t._v("初始化项目")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("mkdir webpack-project\ncd webpack-project\nnpm init -y\t\t// 初始化package.json\n")])])])]),t._v(" "),n("li",[n("p",[t._v("安装webpack")]),t._v(" "),n("ul",[n("li",[t._v("全局安装（不推荐）")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 全局安装(不推荐)，因为如果有两个项目用了webpack不同版本，就会出现版本不统一运行不起来的情况。只有卸了当前版本安装对应版本非常麻烦。\nnpm i webpack webpack-cli -g\n// 查看webpack版本\nwebpack -v\n// 卸载webpack\nnpm uninstall webpack webpack-cli -g\n")])])]),n("ul",[n("li",[t._v("本地安装（推荐）")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 在项目安装webpack。可以在不同项目中使用不同的webpack版本\ncd webpack-project\nnpm i webpack webpack-cli -D\n// 查看webpack版本\nnpx webpack -v\n// 查看对应包的详细信息\nnpm info webpack\n\n// 安装指定版本包\nnpm i webpack@4.16.1 webpack-cli -D\n")])])]),n("p",[n("code",[t._v("webpack-cli")]),t._v(":在命令行可以正确使用webpack")])]),t._v(" "),n("li",[n("p",[t._v("webpack配置文件")]),t._v(" "),n("p",[t._v("在项目根目录创建"),n("code",[t._v("webpack.config.js")]),t._v("文件，这是webpack默认配置文件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nconst path = require('path')\nmodule.exports = {\n\t// 默认是production，打包的文件默认被压缩。开发时设置为development，不被压缩\n\tmode: 'development',\n\t// 打包项目的入口文件\n\tentry: './index.js',\n\t// 打包项目的输出文件\n\toutput: {\n\t\t// 自定义打包输出文件名\n\t\tfilename: 'bundle.js',\n\t\t// 输出文件的绝对路径\n\t\tpath: path.resolve(__dirname, 'bundle')\n\t}\n}\n")])])]),n("p",[t._v("运行打包命令："),n("code",[t._v("npx webpack")]),t._v(",webpack会读取当前目录下默认配置文件"),n("code",[t._v("webpack.config.js")])]),t._v(" "),n("p",[t._v("运行指定配置文件："),n("code",[t._v("npx webpack --config webpack.config.js")])])]),t._v(" "),n("li",[n("p",[t._v("配置scripts")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* package.json */\n\n{\n\t"script": {\n\t\t"build": "webpack"\n\t}\n}\n')])])])]),t._v(" "),n("li",[n("p",[t._v("webpack打包输出内容")]),t._v(" "),n("p",[t._v("在控制台执行"),n("code",[t._v("npm run build")]),t._v("后，控制台输出：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Hash:1b245e275a547956bf52 \t//本次打包对应唯一一个hash值\nVersion:webpack 4.29.6 \t\t\t//本次打包对应webpack版本\nTime:162ms Built at:2019-4-11 23:13:43 //本次打包耗时，及打包的时间\nAsset Size Chunks Chunk Names //打包后的文件名，大小，id，入口文件名\nbundle.js 1.36 KiB 0 [emitted] main \nEntrypoint main=bundle.js\n[0]./src/index.js 159 bytes {0}[built]\n[1]./src/header.js 187 bytes {e}[built]\n[2]./src/sidebar.js 193 bytes {e}[built]\n[3]./src/content.js 193 bytes {e} [built]\n\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"webpack核心概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack核心概念"}},[t._v("#")]),t._v(" webpack核心概念")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("概念")]),t._v(" "),n("ul",[n("li",[t._v("Entry：入口，webpack执行构建的第一步将从Entry开始，可抽象成输入")]),t._v(" "),n("li",[t._v("Module：模块，在webpack里一切皆模块，一个模块对应一个文件。Webpack会从配置的Entry开始递归找出所有的依赖模块")]),t._v(" "),n("li",[t._v("Chunk：代码块，一个Chunk由多个模块组合而成，用于代码合并和分割")]),t._v(" "),n("li",[t._v("Loader：模块转换器，用于把模块原内容转换成新内容")]),t._v(" "),n("li",[t._v("Plugin：扩展插件，在Webpack构建流程中特定时机注入扩展逻辑来改变构建结果或做其他事情")]),t._v(" "),n("li",[t._v("Output：输出结果，在webpack经过一系列处理并得出最终想要的代码后输出结果")])])]),t._v(" "),n("li",[n("p",[t._v("配置")]),t._v(" "),n("p",[t._v("配置webpack.config.js文件")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("entry：配置入口文件地址")])]),t._v(" "),n("li",[n("p",[t._v("output：配置出口文件地址")])]),t._v(" "),n("li",[n("p",[t._v("module：配置模块，主要用来配置不同文件的加载器")])]),t._v(" "),n("li",[n("p",[t._v("plugins：配置插件")])]),t._v(" "),n("li",[n("p",[t._v("devServer：配置开发服务器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 基于node的 遵循commonjs规范的\nlet path = require('path');//node的模块\nmodule.exports = {\n  entry:'./src/index.js', // 入口\n  output:{\n    filename:'build.js',\n    // 这个路径必须是绝对路径\n    path: path.resolve('./dist')\n  }, // 出口\n  devServer:{\n    contentBase:'./dist',\n    port:8080,\n    compress:true,// 服务器压缩\n    open:true,// 自动打开浏览器\n    // hot:true//热更新\n  },// 开发服务器\n  module:{}, // 模块配置\n  plugins:[], // 插件的配置\n  mode:'development', // 可以更改模式\n  resolve:{}, // 配置解析\n}\n// 在webpack中如何配置开发服务器 webpack-dev-server\n\n")])])])])])])]),t._v(" "),n("h2",{attrs:{id:"webpack基本配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack基本配置"}},[t._v("#")]),t._v(" webpack基本配置")]),t._v(" "),n("h3",{attrs:{id:"entry"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#entry"}},[t._v("#")]),t._v(" Entry")]),t._v(" "),n("p",[t._v("入口文件类型：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("单入口 （string）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nentry: './src/index.js'\n")])])])]),t._v(" "),n("li",[n("p",[t._v("多入口（Array）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nentry: ['./src/index.js', './src/main.js']\n")])])])]),t._v(" "),n("li",[n("p",[t._v("多入口（Object）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nentry: {\n\t\tmain: './src/index.js',\n\t\tbundle: './src/bundle.js'\n}\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"output"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" output")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\noutput: {\n\tfilename: '[name].js',\n\tpath: path.resolve(__dirname, 'dist'),\n\tpublicPath: 'http://cdn.com'\t//将注入到HTML中的js前面加上地址\n}\n")])])]),n("h3",{attrs:{id:"sourcemap配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sourcemap配置"}},[t._v("#")]),t._v(" SourceMap配置")]),t._v(" "),n("p",[t._v("sourcemap：打包编译后的文件和源文件的映射关系，用于开发者调试用")]),t._v(" "),n("ul",[n("li",[t._v("source-map：把映射文件生成到单独的文件，最完整但最慢")]),t._v(" "),n("li",[t._v("cheap-module-source-map：在一个单独的文件中产生一个不带映射的map")]),t._v(" "),n("li",[t._v("eval-source-map：使用eval打包源文件模块，在同一个文件中生成完整sourcemap")]),t._v(" "),n("li",[t._v("cheap-module-eval-source-map：和打包后的js同行显示，没有映射了列")])]),t._v(" "),n("p",[t._v("development环境推荐使用：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("devtool: 'cheap-module-eval-source-map'\n")])])]),n("p",[t._v("production环境推荐使用：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("devtool: 'cheap-module-source-map'\n")])])]),n("h3",{attrs:{id:"devserver"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[t._v("#")]),t._v(" devServer")]),t._v(" "),n("p",[n("code",[t._v("npm i webpack-dev-server -D")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("contentBase：配置开发服务器运行时的文件根目录")])]),t._v(" "),n("li",[n("p",[t._v("host：开发服务器监听的主机地址")])]),t._v(" "),n("li",[n("p",[t._v("compress：开发服务器是否启动gzip等压缩")])]),t._v(" "),n("li",[n("p",[t._v("prot：开发服务器监听端口")])]),t._v(" "),n("li",[n("p",[t._v("hot：热更新")])]),t._v(" "),n("li",[n("p",[t._v("hotOnly：热更新之后，浏览器是否重新刷新")])]),t._v(" "),n("li",[n("p",[t._v("open：启动服务器时是否自动打开浏览器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\ndevServer: {\n\tcontentBase: path.resolve(__dirname, 'dist'),\n\thost: 'localhost',\n\tcompress: true,\n\tport: 8080,\n\thot: true,\n\thotOnly: true,\n\topen: false\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* package.json */\n\n"scripts": {\n\t"server": "webpack-dev-server",\n\t"build": "webpack"\n}\n')])])])])]),t._v(" "),n("h3",{attrs:{id:"loader"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[t._v("#")]),t._v(" Loader")]),t._v(" "),n("p",[t._v("webpack可以使用loader来预处理文件，就是通过使用不同的loader，webpack可以把不同的静态文件都编译成js文件，如css、sass、less、ES6/7、vue、jsx等。")]),t._v(" "),n("ul",[n("li",[t._v("test: 匹配处理文件扩展名的正则表达式")]),t._v(" "),n("li",[t._v("use：loader名称")]),t._v(" "),n("li",[t._v("include/exclude：手动指定必须处理的文件或不需要处理的文件夹")]),t._v(" "),n("li",[t._v("query：为loader提供额外的设置选项")])]),t._v(" "),n("p",[t._v("配置loader的三种写法")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("use")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: /\\.css$/,\n\t\t\tuse: ['style-loader', 'css-loader']\n\t\t}\n\t]\n}\n")])])])]),t._v(" "),n("li",[n("p",[t._v("loader")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: /\\.js$/,\n\t\t\texclude: /node_modules/,\n\t\t\tloader: 'babel-loader'\n\t\t}\n]}\n")])])])]),t._v(" "),n("li",[n("p",[t._v("use + loader")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: /\\.(png|jpg|jpeg|gif)$/,\n\t\t\tuse: [\n\t\t\t\t{\n\t\t\t\t\tloader: 'url-loader',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tname: '[name].[ext]',\n\t\t\t\t\t\toutputPath: 'images/'\n\t\t\t\t\t\tlimit: 10 * 1024\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n")])])]),n("h4",{attrs:{id:"加载css文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加载css文件"}},[t._v("#")]),t._v(" 加载css文件")]),t._v(" "),n("p",[n("code",[t._v("npm i style-loader css-loader -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: /\\.css$/\n\t\t\tuse: ['style-loader', 'css-loader'],\t//从右向左，从下到上依次解析，webpack特性\n\t\t\tinclude: path.join(__dirname, './src'),\n\t\t\texclude: /node_modules/\n\t\t}\n\t]\n}\n")])])]),n("h4",{attrs:{id:"编译sass或less"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译sass或less"}},[t._v("#")]),t._v(" 编译SASS或LESS")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm i sass-loader node-sass -D\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module: {\n\trules: [{\n\t\ttest: /\\.scss$/,\n\t\tuse: [\n\t\t\t'style-loader',\t//将JS字符串生成style节点\n\t\t\t'css-loader',\t\t// 将css转换成CommonJS模块\n\t\t\t'sass-loader'\t\t// 将Sass编译成css，默认使用node sass\n\t\t]\n\t}]\n}\n")])])]),n("h4",{attrs:{id:"添加css3属性前缀"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加css3属性前缀"}},[t._v("#")]),t._v(" 添加CSS3属性前缀")]),t._v(" "),n("p",[t._v("为兼容多种浏览器，有时我们需要加入-webkit、-ms、-o、-moz这些前缀")]),t._v(" "),n("ul",[n("li",[t._v("Trident内核：IE浏览器为主要代表，前缀为-ms")]),t._v(" "),n("li",[t._v("Gecko内核：Firefox浏览器为主要代表，前缀为-moz")]),t._v(" "),n("li",[t._v("Presto内核：Opera浏览器为主要代表，前缀为-o")]),t._v(" "),n("li",[t._v("Webkit内核：Chrome和Safari为代表，前缀为-webkit")])]),t._v(" "),n("p",[n("code",[t._v("npm i postcss-loader autoprefixer -D")])]),t._v(" "),n("p",[t._v("项目根目录创建"),n("code",[t._v("postcss.config.js")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* postcss.config.js */\n\nmodule.exports = {\n\tplugins: [require('autoprefixer')]\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nmodule: {\n rules: [{\n \t\ttest: /\\.scss$/,\n \t\tuse: ['style-laoder', 'css-loader', 'postcss-loader', 'scss-loader'],\n \t\tinclude: path.join(__dirname, './src'),\n \t\texclude: /node_modules/\n }]\n}\n")])])])])]),t._v(" "),n("h4",{attrs:{id:"处理es6-7，转义为es5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#处理es6-7，转义为es5"}},[t._v("#")]),t._v(" 处理ES6/7，转义为ES5")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm i babel-loader @babel/core -D\n// 生产依赖，兼容低版本浏览器\nnpm i @babel/polyfill -S\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: /\\.js$/,\n\t\t\texclude: /node_modules/,\t//不需要对第三方模块进行转换，耗费性能\n\t\t\tloader: 'babel-loader'\n\t\t}\n\t]\n}\n")])])]),n("p",[n("code",[t._v("npm i @babel/preset-env -D")])]),t._v(" "),n("p",[n("code",[t._v("npm i babel-plugin-dynamic-import-webpack -D")])]),t._v(" "),n("p",[n("code",[t._v("npm i @babel/runtime -D")])]),t._v(" "),n("p",[n("code",[t._v("npm i @babel/runtime-corejs2 -D")])]),t._v(" "),n("p",[t._v("在项目根目录新建"),n("code",[t._v(".babelrc")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* .babelrc */\n\n{\n\t"presets": [["@babel/preset-env", {\n\t\ttargets: {\n\t\t\tchrome: \'67\'\n\t\t},\n\t\tcorejs: 2,\n\t\tuseBuildIns: \'usage\'\t// 按需添加polyfill,把用到的代码转换成低版本浏览器兼容的\n\t}]],\n\t"plugins": ["dynamic-import-webpack"]\n}\n')])])]),n("h4",{attrs:{id:"处理图片加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#处理图片加载"}},[t._v("#")]),t._v(" 处理图片加载")]),t._v(" "),n("p",[n("code",[t._v("npm i file-loader url-loader -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module: {\n\trules: [\n\t\t{\n\t\t\ttest: /\\.(png|jpg|jpeg|gif)$/i,\n\t\t\tuse: [{\n\t\t\t\tloader: 'url-loader',\n\t\t\t\toptions: {\n\t\t\t\t\tname: '[name].[ext]',\n\t\t\t\t\toutputPath: 'images/',\n\t\t\t\t\tlimit: 10 * 1024\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t]\n}\n")])])]),n("h4",{attrs:{id:"处理字体图标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#处理字体图标"}},[t._v("#")]),t._v(" 处理字体图标")]),t._v(" "),n("p",[t._v("将阿里矢量库字体图标下载到本地，解压。将"),n("code",[t._v("iconfont.eot")]),t._v("、"),n("code",[t._v("iconfont.svg")]),t._v("、"),n("code",[t._v("iconfont.ttf")]),t._v("、"),n("code",[t._v("iconfont.woff")]),t._v("文件放入项目中的新建目录fonts中，将"),n("code",[t._v("iconfont.css")]),t._v("文件拷贝项目中，修改相应引用路径。")]),t._v(" "),n("p",[n("code",[t._v("npm i file-loader -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module: {\n\trules:[{\n\t\ttest: /\\.(eot|ttf|svg|woff)$/,\n\t\tuse: ['file-loader']\n\t}]\n}\n")])])]),n("h3",{attrs:{id:"plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" Plugin")]),t._v(" "),n("p",[t._v("plugin可以在webpack运行到某个时刻帮你做一些事情，使用plugins让打包更便捷。")]),t._v(" "),n("h4",{attrs:{id:"htmlwebpackplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#htmlwebpackplugin"}},[t._v("#")]),t._v(" HtmlWebpackPlugin")]),t._v(" "),n("p",[t._v("HtmlWebpackPlugin会在打包结束后，自动生成一个html文件，并将打包生成的js自动引入到这个html文件中")]),t._v(" "),n("p",[n("code",[t._v("npm i html-webpack-plugin -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nconst HtmlWebpackPlugin = reuqire('html-webpack-plugin')\n\nplugins: [\n\tnew HtmlWebpackPlugin({\n\t\ttemplate: 'src/index.html'\n\t})\n]\n")])])]),n("h4",{attrs:{id:"cleanwebpackplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cleanwebpackplugin"}},[t._v("#")]),t._v(" CleanWebpackPlugin")]),t._v(" "),n("p",[t._v("自动清除上一次打包的dist文件")]),t._v(" "),n("p",[n("code",[t._v("npm i clean-webpack-plugin -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js*/\n\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\n\nplugins: [\n\tnew CleanWebpackPlugin()\n]\n")])])]),n("h4",{attrs:{id:"热模块替换（hmr）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#热模块替换（hmr）"}},[t._v("#")]),t._v(" 热模块替换（HMR）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\nconst webpack = require('webpack')\nplugins: [{\n\tnew webpack.HotModuleReplacementPlugin()\t//使用模块热更新插件\n}]\n")])])]),n("h3",{attrs:{id:"静态资源拷贝-copywebpackplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态资源拷贝-copywebpackplugin"}},[t._v("#")]),t._v(" 静态资源拷贝(CopyWebpackPlugin)")]),t._v(" "),n("p",[n("code",[t._v("npm i copy-webpack-plugin -D")])]),t._v(" "),n("blockquote",[n("p",[t._v("将"),n("code",[t._v("public/js")]),t._v("目录拷贝至"),n("code",[t._v("dist/js")]),t._v("目录")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const CopyWebpackPlugin = require('copy-webpack-plugin')\n\nmodule.exports = {\n\tplugins: [\n\t  new CopyWebpackPlugin([{\n\t    from: './src/*.js',\n\t    to: path.resolve(__dirname, 'dist', 'js'),\n\t    flatten: true  // 默认false,为true时，只拷贝文件，不会拷贝文件夹路径\n\t  }], {\n\t    ignore: ['base.js']\t// 过滤某个或某些文件\n\t  })\n\t]\n}\n")])])]),n("h3",{attrs:{id:"provideplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#provideplugin"}},[t._v("#")]),t._v(" ProvidePlugin")]),t._v(" "),n("p",[n("code",[t._v("ProvidePlugin")]),t._v("提供全局变量，不需要"),n("code",[t._v("import")]),t._v("或"),n("code",[t._v("require")]),t._v("就可以在项目中到处使用。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module.exports = {\n\tplugins: [\n\t\tnew webpack.ProvidePlugin({\n\t\t  React: 'react',\n\t\t  Component: ['react', 'Component'],\n\t\t  Vue: ['vue/dist/vue.esm.js', 'default'],\n      $: 'jquery',\n      _map: ['lodash', 'map']\n\t\t})\n\t]\n}\n")])])]),n("p",[t._v("另外，如果项目启用了"),n("code",[t._v("eslint")]),t._v("，需要修改"),n("code",[t._v("eslint")]),t._v("配置：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('{\n  "globals": {\n    React: true,\n    Vue: true\n  }\n}\n')])])]),n("h3",{attrs:{id:"定义环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义环境变量"}},[t._v("#")]),t._v(" 定义环境变量")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module.exports = {\n  plugins: [\n    new webpack.DefinePlugin({\n      DEV: JSON.stringify('dev'),  // 字符串\n      FLAG: 'true'\t\t// FALG是Boolean类型\n    })\n  ]\n}\n")])])]),n("h3",{attrs:{id:"development和production模式区分打包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#development和production模式区分打包"}},[t._v("#")]),t._v(" Development和Production模式区分打包")]),t._v(" "),n("p",[n("code",[t._v("npm i webpack-merge -D")])]),t._v(" "),n("p",[t._v("项目根目录建立build目录并新建"),n("code",[t._v("webpack.dev.js")]),t._v("、"),n("code",[t._v("webpack.prod.js")]),t._v("和"),n("code",[t._v("webpack.common.js")]),t._v("配置文件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.common.js */\n\nconst path = require('path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin') \nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\nconst webpack = require('webpack')\n\nmodule.exports = {\n\tentry: './src/index.js',\n\tmodule: {\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest： /\\.js$/,\n\t\t\t\texclude: /node_modules/,\n\t\t\t\tloader: 'babel-loader'\n\t\t\t},{\n\t\t\t\ttest: /\\.(png|jpg|jpeg|gif)$/i,\n\t\t\t\tuse: [{\n\t\t\t\t\tloader： 'url-loader',\n\t\t\t\t\toptions： {\n\t\t\t\t\t\tname： '[name].[ext]',\n\t\t\t\t\t\toutputPath: 'images/',\n\t\t\t\t\t\tlimit： 10 * 1024\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttest： /\\.(eot|ttf|svg)$/,\n\t\t\t\t\tloader: 'file-loader'\n          },{\n          \ttest: /\\.scss$/,\n          \tuse: ['style-loader', {\n          \t\tloader: 'css-loader',\n          \t\toptions: {\n          \t\t\timportLoaders: 2,\n          \t\t\tmodules: true\t\t// css模块\n          \t\t}\n          \t}, 'postcss-loader', 'sass-loader']\n          }, {\n          \ttest: /\\.css$/,\n          \tuse: ['style-loader', 'css-loader', 'postcss-loader']\n          }\n          ]\n\t\t\t}\n\t\t]\n\t},\n\tpliugins: [\n\t\tnew HtmlWebpackPlugin({\n\t\t\ttemplate： 'src/index.html'\n\t\t}),\n\t\tnew CleanWebpackPlugin()\n\t],\n\toutput: {\n\t\tfilename： '[name].js',\n\t\tpath： path.resolve(__dirname, '../dist'),\n\t}\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.dev.js */\n\nconst webpack = require('webpack')\nconst merge = require('webpack-merge')\nconst commonConfig = require('./common.config.js')\n\nconst devConfig = {\n\tmode： 'development',\n\tdevtool: 'cheap-module-eval-source-map',\n\tdevServer: {\n\t\tcontentBase: './dist',\n    host: 'localhost',\n    port: 8080,\n    hot: true,\n    hotOnly: true,\n    open: true\n\t},\n\tplugins: [\n\t\tnew webpack.HotModuleReplacementPlugin()\n\t],\n\toptimization: {\n\t\tusedExports： true\n\t}\n}\n\nmodule.exports = merge(commonConfig, devConfig)\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.prod.js */\n\nconst merge = require('webpack-merge')\nconst commonConfig = require('.webpack.common.js')\n\nconst prodConfig = {\n\tmode: 'production',\n\tdevtool: 'cheap-module-source-map'\n}\nmodule.exports = merge(commonConfig, prodConfig)\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* package.json */\n\n"scripts": {\n\t"server": "webpack-dev-server --config ./build/webpack.dev.js",\n\t"dev": "webpack --config ./build/webpack.dev.js",\n\t"build": "webpack --config ./build/webpack.prod.js"\n}\n')])])]),n("h2",{attrs:{id:"webpack进阶"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack进阶"}},[t._v("#")]),t._v(" webpack进阶")]),t._v(" "),n("h3",{attrs:{id:"tree-shaking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking"}},[t._v("#")]),t._v(" Tree Shaking")]),t._v(" "),n("p",[t._v("只支持ES module，如"),n("code",[t._v("import")]),t._v("和"),n("code",[t._v("export")]),t._v("静态结构特性的引入。当引入一个模块时，不引入所有代码，只引入需要的代码。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.dev.js */\n\noptimization: {\n\tusedExports: true, \t//在开发环境加，生产环境不加\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('{\n\t"sideEffects": ["*.css"], // 对所有的css文件不使用Tree Shaking。如果填false，就都需要用到Tree Shaking\n}\n')])])]),n("h3",{attrs:{id:"css文件分割和代码压缩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css文件分割和代码压缩"}},[t._v("#")]),t._v(" CSS文件分割和代码压缩")]),t._v(" "),n("p",[t._v("抽离css文件")]),t._v(" "),n("p",[n("code",[t._v("npm i mini-css-extract-plugin -D")])]),t._v(" "),n("p",[t._v("压缩css文件")]),t._v(" "),n("p",[n("code",[t._v("npm i optimize-css-assets-webpack-plugin -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.prod.js */\n\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nconst merge = require('webpack-merge');\nconst commonConfig = require('./webpack.common.js');\n\n\nconst prodConfig = {\n\tmode: 'production',\n\tdevtool: 'cheap-module-source-map',\n\tmodule: {\n\t\trules:[{\n\t\t\ttest: /\\.scss$/,\n\t\t\tuse: [\n+\t\t\t\tMiniCssExtractPlugin.loader, \n\t\t\t\t{\n\t\t\t\t\tloader: 'css-loader',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\timportLoaders: 2\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'postcss-loader',\n\t\t\t\t'sass-loader',\n\t\t\t\t\n\t\t\t]\n\t\t}, {\n\t\t\ttest: /\\.css$/,\n\t\t\tuse: [\n+\t\t\t\tMiniCssExtractPlugin.loader,\n\t\t\t\t'css-loader',\n\t\t\t\t'postcss-loader'\n\t\t\t]\n\t\t}]\n\t},\n+\toptimization: {\n\t\tminimizer: [new OptimizeCSSAssetsPlugin({})]\n\t},\n\tplugins: [\n+\t\tnew MiniCssExtractPlugin({\n\t\t\tfilename: '[name].css',//直接引用的css文件\n\t\t\tchunkFilename: '[name].chunk.css'//间接引用的css文件\n\t\t})\n\t]\n}\n\nmodule.exports = merge(commonConfig, prodConfig);\n\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.dev.js */\n\nconst webpack = require('webpack');\nconst merge = require('webpack-merge');\nconst commonConfig = require('./webpack.common.js');\n\nconst devConfig = {\n\tmode: 'development',\n\tdevtool: 'cheap-module-eval-source-map',\n\tdevServer: {\n\t\tcontentBase: './dist',\n\t\topen: true,\n\t\tport: 8080,\n\t\thot: true\n\t},\n\tmodule: {\n\t\trules: [{\n\t\t\ttest: /\\.scss$/,\n\t\t\tuse: [\n\t\t\t\t'style-loader', \n\t\t\t\t{\n\t\t\t\t\tloader: 'css-loader',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\timportLoaders: 2\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'postcss-loader',\n\t\t\t\t'sass-loader',\n\t\t\t\t\n\t\t\t]\n\t\t}, {\n\t\t\ttest: /\\.css$/,\n\t\t\tuse: [\n\t\t\t\t'style-loader',\n\t\t\t\t'css-loader',\n\t\t\t\t'postcss-loader'\n\t\t\t]\n\t\t}]\n\t},\n\tplugins: [\n\t\tnew webpack.HotModuleReplacementPlugin()\n\t],\n}\n\nmodule.exports = merge(commonConfig, devConfig);\n\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.common.js */\n\nconst path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\n\nmodule.exports = {\n\tentry: {\n\t\tmain: './src/index.js',\n\t},\n\tmodule: {\n\t\trules: [{ \n\t\t\ttest: /\\.js$/, \n\t\t\texclude: /node_modules/, \n\t\t\tloader: 'babel-loader',\n\t\t}, {\n\t\t\ttest: /\\.(jpg|png|gif)$/,\n\t\t\tuse: {\n\t\t\t\tloader: 'url-loader',\n\t\t\t\toptions: {\n\t\t\t\t\tname: '[name]_[hash].[ext]',\n\t\t\t\t\toutputPath: 'images/',\n\t\t\t\t\tlimit: 10240\n\t\t\t\t}\n\t\t\t} \n\t\t}, {\n\t\t\ttest: /\\.(eot|ttf|svg)$/,\n\t\t\tuse: {\n\t\t\t\tloader: 'file-loader'\n\t\t\t} \n\t\t}]\n\t},\n\tplugins: [\n\t\tnew HtmlWebpackPlugin({\n\t\t\ttemplate: 'src/index.html'\n\t\t}), \n\t\tnew CleanWebpackPlugin(['dist'], {\n\t\t\troot: path.resolve(__dirname, '../')\n\t\t})\n\t],\n\toptimization: {\n\t\tusedExports: true,//TreeShaking\n\t\tsplitChunks: {\n      chunks: 'all'\n    }\n\t},\n\toutput: {\n\t\tfilename: '[name].js',\n\t\tchunkFilename: '[name].chunk.js',\n\t\tpath: path.resolve(__dirname, '../dist')\n\t}\n}\n\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* package.json */\n\n{\n    "sideEffects": ["*.css"] //除了css文件，其余的都TreeShaking\n}\n\n')])])]),n("h3",{attrs:{id:"代码分割-code-splitting"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码分割-code-splitting"}},[t._v("#")]),t._v(" 代码分割(Code Splitting)")]),t._v(" "),n("p",[n("code",[t._v("npm i lodash -S")])]),t._v(" "),n("p",[n("code",[t._v("npm i babel-plugin-dynamic-import-webpack -D")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("代码同步分割：只需要在webpack.common.js中做optimization的配置即可")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.common.js */\n\noptimization： {\n\tsplitChunks: {\n\t\tchunks： 'all'\n\t}\n}\n")])])])]),t._v(" "),n("li",[n("p",[t._v("代码异步分割：异步代码，无需做任何配置，会自动进行代码分割，放置到新的文件中")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* .babelrc */\n\n{\n\tpresets: [\n\t\t[\n\t\t\t"@babel/preset-env", {\n\t\t\t\ttargets: {\n\t\t\t\t\tchrome: "67",\n\t\t\t\t},\n\t\t\t\tuseBuiltIns: \'usage\'\n\t\t\t}\n\t\t],\n\t\t"@babel/preset-react"\n\t],\n+\tplugins: ["@babeL/plugin-syntax-dynamic-import"]\n}\n')])])])]),t._v(" "),n("li",[n("p",[t._v("SplitChunkPlugin配置参数详情")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.config.js */\n\n+    optimization:{\n+       splitChunks:{ //启动代码分割,不写有默认配置项\n+            chunks: 'all',//参数all/initial/async，只对所有/同步/异步进行代码分割\n              minSize: 30000, //大于30kb才会对代码分割\n              maxSize: 0,\n              minChunks: 1,//打包生成的文件，当一个模块至少用多少次时才会进行代码分割\n              maxAsyncRequests: 5,//同时加载的模块数最多是5个\n              maxInitialRequests: 3,//入口文件最多3个模块会做代码分割，否则不会\n              automaticNameDelimiter: '~',//文件自动生成的连接符\n              name: true,\n            cacheGroups:{//对同步代码走缓存组\n             vendors: {\n                  test: /[\\\\/]node_modules[\\\\/]/,\n                  priority: -10,//谁优先级大就把打包后的文件放到哪个组\n    \t\t\tfilename:'vendors.js'\n                },\n            default: {\n              minChunks: 2,\n              priority: -20,\n              reuseExistingChunk: true,//模块已经被打包过了，就不用再打包了，复用之前的就可以\n              filename:'common.js' //打包之后的文件名   \n            }\n        }\n+        }  \n+    }\n")])])])]),t._v(" "),n("li",[n("p",[t._v("代码分析")]),t._v(" "),n("p",[n("code",[t._v("npm i webpack-bundle-analyzer -D")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.prod.js */\n\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\nplugins: [\n        new BundleAnalyzerPlugin({\n            analyzerMode: 'server',\n            analyzerHost: '127.0.0.1',\n            analyzerPort: 8889,\n            reportFilename: 'report.html',\n            defaultSizes: 'parsed',\n            openAnalyzer: true,\n            generateStatsFile: false,\n            statsFilename: 'stats.json',\n            statsOptions: null,\n            logLevel: 'info',\n        }),\n    ],\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* package.json */\n\n"scripts": {\n\t  "analyze": "webpack --profile --json > stats.json --config ./build/webpack.dev.js",\n}\n')])])])]),t._v(" "),n("li",[n("p",[t._v("预取/预加载模块")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 预取(推荐)\nimport(/* webpackPrefetch: true */ 'LoginModal');\n// 预加载\nimport(/* webpackPreload: true */ 'LoginModal');\n")])])]),n("p",[t._v("/* webpackPrefetch: true */：把主加载流程加载完毕，在空闲时在加载其他，等再点击其他时，只需要从缓存中读取即可，性能更好。推荐使用，提高代码利用率。把一些交互后才能用到的代码写到异步组件里，通过懒加载的形式，去把这块的代码逻辑加载进来，性能提升，页面访问速度更快。")]),t._v(" "),n("p",[t._v("/* webpackPreload: true */: 和主加载流程一起并行加载。")])])]),t._v(" "),n("h3",{attrs:{id:"浏览器缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.common.js */\n\noptimization: {\n\truntimeChunk: {/兼容老版本webpack4，把manifest打包到runtime里，不影响业务代码和第三方模块\n\t\tname: 'runtime'\n\t}\n}\noutput: {\n\tpath: path.resolve(__dirname, '../dist')\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.dev.js */\n\noutput: {\n\tfilename: '[name].js',\n\tchunkFilename: '[name].chunk.js'\n}\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* webpack.prod.js */\n\noutput: {\n\tfilename: '[name].[contenthash].js',\n\tchunkFilename: '[name].[contenthash].js'\n}\n")])])]),n("p",[t._v("[参考]")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/post/5cb36a3ef265da03a1581d6d",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金-从基础到实战webpack4详解"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);